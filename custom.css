@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');

/*:::::::                        Default OBS custom css value                        :::::::*/
body { background-color: rgba(0, 0, 0, 0); margin: 0px auto; overflow: hidden; }

/*:::::::                             Text fields fonts                              :::::::*/
/* Imported font with the @import above */
#previous, #div-previous-prefix {
    color: #ffffff;
    font-size: 24px;
    font-weight: bold;
    font-family: "Roboto", sans-serif; }

#title    {
    color: #ffffff;
    font-size: 48px;
    font-weight: bold;
    font-family: "Helvetica Neue", sans-serif; }

#artist   {
    color: #707070;
    text-transform: uppercase;
    font-size: 36px;
    font-weight: bold;
    font-family: "Helvetica Neue", sans-serif; }

#album    {
    color: #7b7ba7;
    font-size: 32px;
    font-weight: bold;
    font-family: "Roboto", sans-serif; }

#duration-current,
#duration-total {
    color: #707070;
    font-size: 18px;
    font-weight: bold;
    font-family: "Roboto", sans-serif;
}

/*:::::::                  Previous/current display order and style                  :::::::*/
#div-current      { order: 0; }  /* 0: Top row    */
#div-previous-row { order: 1; }  /* 1: Bottom row */
/* Set widget background color */
#div-current      { background-color: #1CB050; }
#div-previous-row { background-color: #1CB050; }
/* Set 'display' to none in order to disable completely the "previous track" feature.
   Default value is 'inherit'. */
#div-progress { display: inherit; }

/*:::::::                        Cover/song info display order                       :::::::*/
#div-cover    { order: 0; }  /* 0: Left side | 1: Right side */
#div-cover    { background-color: #1CB050; }

/*:::::::                      Song info display order and style                     :::::::*/
#div-title    { order: 0; }  /* 0: Top row           */
#div-artist   { order: 1; }  /* 1: First middle row  */
#div-album    { order: 2; }  /* 2: Second middle row */
#div-duration { order: 3; }  /* 3: Bottom row        */
/* Set margin-left to none: Align left | auto: Align right */
#title, #artist, #album { margin-left: none; }
/* Set background color */
#div-song>div { background-color: #1CB050; }
/* Set Shadow that covers the text when it scrolls in and out */
#div-song     { box-shadow: inset -19px 0px 3px -3px #1CB050,
                            inset 19px 0px 3px -3px #1CB050; }

/*:::::::                                 Widget style                                :::::::*/
/* Set up the widget's rounded border. e.g. 25px */
/* It'll automatically apply to the previous row */
#div-current { border-radius: 25px; }

/*:::::::                                 Cover style                                :::::::*/
/* Set up the cover's size; e.g height: 80%;
   and rounded border.      e.g border-radius: 25px; */
#cover { height: 80%; width: 80%; border-radius: 25px; } 

/*:::::::                             Progress bar style                             :::::::*/
#div-progress { background-color: #535353 !important; }
#div-bar      { background-color: #b3b3b3; }
/* Set to 'scaleX(-1)' to make the progress bar go from right to left.
   Default is left to right */
#div-progress { transform: scaleX(1); }
/* Set 'display' to 'none' in order to disable completely the "progress bar" feature.
   Default value is 'inherit'. */
#div-progress { display: inherit; }

/*:::::::                             Duration style                             :::::::*/
/* Set to 'row-reverse' do display total duration on the left side and current duration
on the right side.
Default value is : 'row'. */
#div-duration-row { flex-direction: row; }
/* Set to 'none' in order to disable completely the "progress bar" feature.
   Default value is 'flex'. */
#div-duration-row { display: flex; }

/*:::::::                 Previous song info display order and style                 :::::::*/
/* Set margin-left to none: Align left | auto: Align right */
#div-previous-prefix { margin-left: none; order: 0; } /* 0: Left side */
#div-previous        { order: 1; }                    /* 1: Right side */

/*:::::::                           Intro/outro animation                            :::::::*/
/* Pick from: none | fadeIn | slideInUp | slideInDown | slideInRight | slideInLeft */
.animateIn    { animation: slideInRight 0.5s; }

/* Pick from: none | fadeOut | slideOutUp | slideOutDown | slideOutRight | slideOutLeft */
.animateOut   { animation: slideOutDown 0.5s; }

/* You can briefly display the widget by queuing 2 of the above animations in .animateIn
   with "hold [duration] [delay]" in-between
   Note: Comment the 2 animations above before uncommenting the one below.
   The delay of the hold animation should be the duration of the first one.
   The delay of the second animation should be the sum of the duration and delay of the hold one. */
/* .animateIn { animation: slideInRight 0.5s, hold 4.5s 0.5s, slideOutDown 0.5s 5s; } */